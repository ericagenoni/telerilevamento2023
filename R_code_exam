#########bozza############

# Progetto di telerilevamento geo-ecologico 2024
# Analisi del trend di disseccamento del Lago d'Aral nel 2024
# Dati disponibili: gennaio, marzo, maggio e luglio 2024, scaricati dal portale Sentinel 2

# Impostazione della directory di lavoro
setwd("C:/Esame_telerilevamento_2024/Data")

# Installazione e caricamento dei pacchetti necessari
install.packages("ggplot2")
install.packages("raster")
install.packages("rasterVis")
install.packages("sf")
install.packages("viridis")
install.packages("patchwork")
install.packages("terra")
install.packages("tidyverse")

#required_packages <- c("ggplot2", "raster", "rasterVis", "sf", "viridis", "patchwork", "terra", "tidyverse")
#install.packages(setdiff(required_packages, rownames(installed.packages())), dependencies = TRUE)
#lapply(required_packages, library, character.only = TRUE)

# Caricamento dei pacchetti necessari
library(raster)
library(ggplot2)
library(viridisLite)
library(patchwork)
library(rasterVis)
library(sf)
library(terra)
library(tidyverse)

# working directory dei dati Sentinel
setwd("C:/Esame_telerilevamento_2024/sentinel_data/R20")

# Elenco dei file .jp2 nella cartella specificata
files <- list.files(pattern = "*.jp2")
tci_files <- list.files(pattern = "TCI_20m.jp2")

# Caricamento delle bande di immagine Sentinel per i vari mesi
# Banda Blu
b2_l <- raster("T40TFR_20240709T065621_B02_20m.jp2")   #luglio 2024
b2_mg <- raster("T40TFR_20240530T065621_B02_20m.jp2")  #maggio 2024
b2_mr <- raster("T40TFR_20240301T065821_B02_20m.jp2")  #marzo  2024
b2_g <- raster("T40TFR_20240101T070301_B02_20m.jp2")  #gennaio 2024

# Plot delle bande blu per ciascun mese
par(mfrow = c(2, 2))
plot(b2_l, main = "Luglio 2024", col = viridis(100))
plot(b2_mg, main = "Maggio 2024", col = viridis(100))
plot(b2_mr, main = "Marzo 2024", col = viridis(100))
plot(b2_g, main = "Gennaio 2024", col = viridis(100))

# Calcolo delle differenze tra le immagini per le bande blu
#diff_jan_mar <- b2_marzo - b2_gennaio   # Differenza tra Marzo e Gennaio
#diff_mar_may <- b2_maggio - b2_marzo    # Differenza tra Maggio e Marzo
#diff_may_jul <- b2_luglio - b2_maggio   # Differenza tra Luglio e Maggio
#diff_jan_jul <- b2_gennaio - b2_luglio  # Differenza tra Gennaio e Luglio

# Plot delle differenze tra le bande blu
#par(mfrow = c(2, 2))
#plot(diff_jan_mar, main = "Differenza Marzo - Gennaio", col = viridis(100))
#plot(diff_mar_may, main = "Differenza Maggio - Marzo", col = viridis(100))
#plot(diff_may_jul, main = "Differenza Luglio - Maggio", col = viridis(100))
#plot(diff_jan_jul, main = "Differenza Gennaio - Luglio", col = viridis(100))

# Caricamento delle bande ciascun periodo
# Banda Verde
g3_l <- raster("T40TFR_20240709T065621_B03_20m.jp2") #luglio
g3_mg <- raster("T40TFR_20240530T065621_B03_20m.jp2") #maggio
g3_mr <- raster("T40TFR_20240301T065821_B03_20m.jp2") #marzo
g3_g <- raster("T40TFR_20240101T070301_B03_20m.jp2") #gennaio

# Banda Rossa
r4_l <- raster("T40TFR_20240709T065621_B04_20m.jp2")
r4_mg <- raster("T40TFR_20240530T065621_B04_20m.jp2")
r4_mr <- raster("T40TFR_20240301T065821_B04_20m.jp2")
r4_g <- raster("T40TFR_20240101T070301_B04_20m.jp2")

# Plot delle bande rosse
par(mfrow = c(2, 2))
plot(r4_l, main = "Luglio 2024", col = viridis(100))
plot(r4_mg, main = "Maggio 2024", col = viridis(100))
plot(r4_mr, main = "Marzo 2024", col = viridis(100))
plot(r4_g, main = "Gennaio 2024", col = viridis(100))

# NIR
nir_l <- raster("T40TFR_20240709T065621_B8A_20m.jp2")
nir_mg <- raster("T40TFR_20240530T065621_B8A_20m.jp2")
nir_mr <- raster("T40TFR_20240301T065821_B8A_20m.jp2")
nir_g <- raster("T40TFR_20240101T070301_B8A_20m.jp2")


# Funzione per normalizzare i valori
normalize <- function(x) {
  min_val <- min(x, na.rm = TRUE)
  max_val <- max(x, na.rm = TRUE)
  return(((x - min_val) / (max_val - min_val)) * 255)
}

# Normalizzazione delle bande per Gennaio
b2_norm_g <- calc(b2_g, fun = normalize)
g3_norm_g <- calc(g3_g, fun = normalize)
r4_norm_g <- calc(r4_g, fun = normalize)
nir_norm_g <- calc(nir_g, fun = normalize)

# Normalizzazione delle bande per Marzo
b2_norm_mr <- calc(b2_mr, fun = normalize)
g3_norm_mr <- calc(g3_mr, fun = normalize)
r4_norm_mr <- calc(r4_mr, fun = normalize)
nir_norm_mr <- calc(nir_mr, fun = normalize)

# Normalizzazione delle bande per Maggio
b2_norm_mg <- calc(b2_mg, fun = normalize)
g3_norm_mg <- calc(g3_mg, fun = normalize)
r4_norm_mg <- calc(r4_mg, fun = normalize)
nir_norm_mg <- calc(nir_mg, fun = normalize)

# Normalizzazione delle bande per Luglio
b2_norm_l <- calc(b2_l, fun = normalize)
g3_norm_l <- calc(g3_l, fun = normalize)
r4_norm_l <- calc(r4_l, fun = normalize)
nir_norm_l <- calc(nir_l, fun = normalize)


# Creazione di stack RGB normalizzati per ciascun mese
rgb_stack_g <- stack(r4_norm_g, g3_norm_g, b2_norm_g)   # Gennaio 2024
rgb_stack_mr <- stack(r4_norm_mr, g3_norm_mr, b2_norm_mr)  # Marzo 2024
rgb_stack_mg <- stack(r4_norm_mg, g3_norm_mg, b2_norm_mg)  # Maggio 2024
rgb_stack_l <- stack(r4_norm_l, g3_norm_l, b2_norm_l)    # Luglio 2024


# Visualizzazione delle immagini RGB per ciascun mese
par(mfrow = c(2, 2))
plotRGB(rgb_stack_g, main = "Gennaio 2024")
plotRGB(rgb_stack_mr, main = "Marzo 2024")
plotRGB(rgb_stack_mg, main = "Maggio 2024")
plotRGB(rgb_stack_l, main = "Luglio 2024")

########################## CALCOLO NDVI ###############################################
# Funzione per calcolare l'NDVI
calc_ndvi <- function(nir, red) {
  return((nir - red) / (nir + red))
}

# Calcolo dell'NDVI per ciascun periodo
ndvi_g <- calc_ndvi(nir_g, r4_g)     # NDVI Gennaio
ndvi_mr <- calc_ndvi(nir_mr, r4_mr)  # NDVI Marzo
ndvi_mg <- calc_ndvi(nir_mg, r4_mg)  # NDVI Maggio
ndvi_l <- calc_ndvi(nir_l, r4_l)     # NDVI Luglio

# Visualizzazione degli NDVI per ciascun mese
par(mfrow = c(2, 2), mar = c(4, 4, 2, 1) + 0.1)
plot(ndvi_g, main = "NDVI Gennaio 2024", col = viridis(100))
plot(ndvi_mr, main = "NDVI Marzo 2024", col = viridis(100))
plot(ndvi_mg, main = "NDVI Maggio 2024", col = viridis(100))
plot(ndvi_l, main = "NDVI Luglio 2024", col = viridis(100))


##################### 1. Analisi Temporale del Trend dell'NDVI
#Obiettivo: Valutare come l'NDVI cambia nel 
#tempo tra gennaio e luglio per identificare
#periodi di aumento o diminuzione della vegetazione.######

# Calcolo delle differenze tra gli NDVI
ndvi_diff_jan_mar <- ndvi_mr - ndvi_g   # Differenza NDVI tra Marzo e Gennaio
ndvi_diff_mar_may <- ndvi_mg - ndvi_mr  # Differenza NDVI tra Maggio e Marzo
ndvi_diff_may_jul <- ndvi_l - ndvi_mg   # Differenza NDVI tra Luglio e Maggio
ndvi_diff_jan_jul <- ndvi_g - ndvi_l    # Differenza NDVI tra Gennaio e Luglio

# Plot delle differenze NDVI

# Imposta layout a 2x2 con margini più grandi per il titolo generale
par(mfrow = c(2, 2), mar = c(4, 4, 2, 1) + 0.1)

# Grafici singoli con titoli specifici
plot(ndvi_diff_jan_mar, main = "Differenza NDVI: Marzo - Gennaio", col = viridis(100))
plot(ndvi_diff_mar_may, main = "Differenza NDVI: Maggio - Marzo", col = viridis(100))
plot(ndvi_diff_may_jul, main = "Differenza NDVI: Luglio - Maggio", col = viridis(100))
plot(ndvi_diff_jan_jul, main = "Differenza NDVI: Gennaio - Luglio", col = viridis(100))


###################2.Calcolo della Media e della Deviazione Standard dell'NDVI
#Obiettivo: Quantificare il livello medio di vegetazione e la variabilità della 
#copertura vegetale in ciascun mese.

# Calcolo della media e della deviazione standard degli NDVI per ciascun mese
ndvi_mean_g <- cellStats(ndvi_g, stat = 'mean', na.rm = TRUE)
ndvi_sd_g <- cellStats(ndvi_g, stat = 'sd', na.rm = TRUE)

ndvi_mean_mr <- cellStats(ndvi_mr, stat = 'mean', na.rm = TRUE)
ndvi_sd_mr <- cellStats(ndvi_mr, stat = 'sd', na.rm = TRUE)

ndvi_mean_mg <- cellStats(ndvi_mg, stat = 'mean', na.rm = TRUE)
ndvi_sd_mg <- cellStats(ndvi_mg, stat = 'sd', na.rm = TRUE)

ndvi_mean_l <- cellStats(ndvi_l, stat = 'mean', na.rm = TRUE)
ndvi_sd_l <- cellStats(ndvi_l, stat = 'sd', na.rm = TRUE)

# Creazione di un data frame per la visualizzazione
ndvi_stats <- data.frame(
  Mese = c("Gennaio", "Marzo", "Maggio", "Luglio"),
  Media = c(ndvi_mean_g, ndvi_mean_mr, ndvi_mean_mg, ndvi_mean_l),
  SD = c(ndvi_sd_g, ndvi_sd_mr, ndvi_sd_mg, ndvi_sd_l)
)

print(ndvi_stats)

################### 3. Visualizzazione delle Medie e Varianze dell'NDVI ###################
#cellStats non supporta direttamente la funzione di 
#calcolo della varianza (var). cellStats è limitato a calcolare 
#olo statistiche predefinite come somma, minimo, massimo, 
#deviazione standard, media e conteggio dei valori mancanti.
# Calcolo della varianza degli NDVI per ciascun mese
# Calcolo della deviazione standard degli NDVI per ciascun mese

ndvi_sd_g <- cellStats(ndvi_g, stat = 'sd', na.rm = TRUE)
ndvi_sd_mr <- cellStats(ndvi_mr, stat = 'sd', na.rm = TRUE)
ndvi_sd_mg <- cellStats(ndvi_mg, stat = 'sd', na.rm = TRUE)
ndvi_sd_l <- cellStats(ndvi_l, stat = 'sd', na.rm = TRUE)

# Calcolo della varianza dalla deviazione standard
ndvi_var_g <- ndvi_sd_g^2
ndvi_var_mr <- ndvi_sd_mr^2
ndvi_var_mg <- ndvi_sd_mg^2
ndvi_var_l <- ndvi_sd_l^2

# Creazione di un data frame per le medie e varianze
ndvi_stats <- data.frame(
  Mese = c("Gennaio", "Marzo", "Maggio", "Luglio"),
  Media = c(ndvi_mean_g, ndvi_mean_mr, ndvi_mean_mg, ndvi_mean_l),
  Varianza = c(ndvi_var_g, ndvi_var_mr, ndvi_var_mg, ndvi_var_l)
)

# Visualizzazione delle medie dell'NDVI per mese
barplot(ndvi_stats$Media,
        names.arg = ndvi_stats$Mese,
        main = "Media NDVI per Mese",
        ylab = "Media NDVI",
        col = "skyblue")

# Visualizzazione delle varianze dell'NDVI per mese
barplot(ndvi_stats$Varianza,
        names.arg = ndvi_stats$Mese,
        main = "Varianza NDVI per Mese",
        ylab = "Varianza NDVI",
        col = "salmon")


#Da gennaio a maggio, c'è un graduale aumento della media dell'NDVI, 
#che potrebbe indicare una crescita progressiva della vegetazione in primavera.
#A luglio, si osserva un leggero calo della media dell'NDVI rispetto a maggio,
#che potrebbe essere dovuto a vari fattori, come un clima più caldo o periodi 
#di siccità che iniziano a influenzare la vegetazione.

#La variabilità dell'NDVI è massima a gennaio, suggerendo che la copertura vegetale
#è molto eterogenea in questo mese. Potrebbe essere legato a fattori come la
#presenza di aree con vegetazione densa alternata a zone spoglie o a zone con
#differenze significative nella tipologia di vegetazione.
#Da gennaio a luglio, la deviazione standard diminuisce, indicando che la
#copertura vegetale diventa progressivamente più omogenea. Questo potrebbe
#essere dovuto a una crescita più uniforme della vegetazione con l'avanzare
#della stagione, o all'eliminazione di zone meno vegetate con l'inizio della
#primavera e dell'estate.



###########3. Mappatura delle Aree a Rischio di Disseccamento
#Obiettivo: Identificare le aree con valori di NDVI molto bassi, 
#che indicano stress idrico o carenza di vegetazione.

# Definisci una soglia per identificare aree a basso NDVI
threshold <- 0.2

# Creazione di un raster binario che identifica le aree sotto la soglia
areas_low_ndvi_g <- ndvi_g < threshold
areas_low_ndvi_mr <- ndvi_mr < threshold
areas_low_ndvi_mg <- ndvi_mg < threshold
areas_low_ndvi_l <- ndvi_l < threshold

# Plot delle aree con NDVI basso
par(mfrow = c(2, 2))
plot(areas_low_ndvi_g, main = "Aree a Basso NDVI - Gennaio", col = viridis(100))
plot(areas_low_ndvi_mr, main = "Aree a Basso NDVI - Marzo", col = viridis(100))
plot(areas_low_ndvi_mg, main = "Aree a Basso NDVI - Maggio", col = viridis(100))
plot(areas_low_ndvi_l, main = "Aree a Basso NDVI - Luglio", col = viridis(100))

print(range(values(ndvi_g)))
print(range(values(ndvi_mr)))
print(range(values(ndvi_mg)))
print(range(values(ndvi_l)))

print(table(values(areas_low_ndvi_g)))
print(table(values(areas_low_ndvi_mr)))
print(table(values(areas_low_ndvi_mg)))
print(table(values(areas_low_ndvi_l)))

###Conteggi dei Valori Binari:
#Quasi tutti i pixel nei raster binari sono TRUE 
#(cioè, sotto la soglia di 0.2). Solo una piccola
#frazione dei pixel è FALSE (sopra la soglia).
#La maggior parte dei valori è al di sotto della
#soglia di 0.2 per tutti i mesi, con marzo che ha
#solo 138 pixel sopra la soglia, mentre gli altri
#mesi hanno tra 11,725 e 65,605 pixel sopra la soglia.
#Gran parte delle aree ha un NDVI inferiore alla soglia
#di 0.2. Questo è il motivo per cui i grafici appaiono 
#quasi interamente gialli: la maggior parte delle aree 
#soddisfa la condizione di "basso NDVI".
#Valori Negativi di NDVI: I valori negativi suggeriscono 
#che in molte aree c'è poca o nessuna vegetazione


######MNDWI (Modified Normalized Difference Water Index)
#usiamo le bande Green (B03) e 
#SWIR (Short-Wave Infrared, B11)
#delle immagini Sentinel-2.

# Caricamento delle bande SWIR (B11) per ciascun periodo
swir11_l <- raster("T40TFR_20240709T065621_B11_20m.jp2")  # Luglio
swir11_mg <- raster("T40TFR_20240530T065621_B11_20m.jp2") # Maggio
swir11_mr <- raster("T40TFR_20240301T065821_B11_20m.jp2") # Marzo
swir11_g <- raster("T40TFR_20240101T070301_B11_20m.jp2")  # Gennaio

# Funzione per calcolare l'MNDWI
calc_mndwi <- function(green, swir) {
  return((green - swir) / (green + swir))
}

# Calcolo dell'MNDWI per ciascun periodo
mndwi_g <- calc_mndwi(g3_g, swir11_g)     # MNDWI Gennaio 2024
mndwi_mr <- calc_mndwi(g3_mr, swir11_mr)  # MNDWI Marzo 2024
mndwi_mg <- calc_mndwi(g3_mg, swir11_mg)  # MNDWI Maggio 2024
mndwi_l <- calc_mndwi(g3_l, swir11_l)     # MNDWI Luglio 2024

# Visualizzazione degli MNDWI per ciascun mese
par(mfrow = c(1, 1))
plot(mndwi_g, main = "MNDWI Gennaio 2024", col = viridis(100))
# Ridurre i margini del grafico
par(mar = c(2, 2, 2, 2))  # Riduce i margini
plot(mndwi_g, main = "MNDWI Gennaio 2024", col = viridis(100))

par(mar = c(2, 2, 2, 2)) 
plot(mndwi_mr, main = "MNDWI Marzo 2024", col = viridis(100))
par(mar = c(2, 2, 2, 2)) 
plot(mndwi_mg, main = "MNDWI Maggio 2024", col = viridis(100))
par(mar = c(2, 2, 2, 2)) 
plot(mndwi_l, main = "MNDWI Luglio 2024", col = viridis(100))

# Calcolo della media e della deviazione standard degli MNDWI per ciascun mese
mndwi_mean_g <- cellStats(mndwi_g, stat = 'mean', na.rm = TRUE)
mndwi_sd_g <- cellStats(mndwi_g, stat = 'sd', na.rm = TRUE)

mndwi_mean_mr <- cellStats(mndwi_mr, stat = 'mean', na.rm = TRUE)
mndwi_sd_mr <- cellStats(mndwi_mr, stat = 'sd', na.rm = TRUE)

mndwi_mean_mg <- cellStats(mndwi_mg, stat = 'mean', na.rm = TRUE)
mndwi_sd_mg <- cellStats(mndwi_mg, stat = 'sd', na.rm = TRUE)

mndwi_mean_l <- cellStats(mndwi_l, stat = 'mean', na.rm = TRUE)
mndwi_sd_l <- cellStats(mndwi_l, stat = 'sd', na.rm = TRUE)

# Creazione di un data frame per la visualizzazione
mndwi_stats <- data.frame(
  Mese = c("Gennaio", "Marzo", "Maggio", "Luglio"),
  Media = c(mndwi_mean_g, mndwi_mean_mr, mndwi_mean_mg, mndwi_mean_l),
  SD = c(mndwi_sd_g, mndwi_sd_mr, mndwi_sd_mg, mndwi_sd_l)
)

print(mndwi_stats)

#Interpretazione dei Risultati
#Media MNDWI: La media dell'indice MNDWI per ciascun mese è
#negativa. Un valore negativo del MNDWI generalmente indica 
#una predominanza di suolo o altre superfici non acquatiche,
#mentre valori positivi indicano la presenza di acqua. Sembra 
#quindi che per questi mesi il tuo area di studio non abbia una
#quantità significativa di acqua o che la vegetazione e il suolo
#siano prevalenti.

#Deviazione Standard (SD): La deviazione standard per ciascun mese
#è simile, intorno a 0.15, suggerendo una variazione moderata dei
#valori MNDWI all'interno dell'area di studio per ogni mese.

###verifica della significatività di questi risultati
# Creazione di un vettore con i dati medi dell'MNDWI
mndwi_values <- c(-0.03418919, -0.07814787, -0.07712662, -0.08001893)
mesi <- factor(c("Gennaio", "Marzo", "Maggio", "Luglio"))

# Creazione di un data frame per i dati
data <- data.frame(MNDWI = mndwi_values, Mese = mesi)

# Statistiche descrittive di base
summary(data$MNDWI)

#Interpretazione
#Minimo e Massimo: Il valore minimo è -0.08002 (Luglio) e il massimo 
#è -0.03419 (Gennaio). Ciò indica una variabilità limitata nei valori
#medi del MNDWI tra i mesi.
#Quartili: I valori dei quartili suggeriscono che i dati sono distribuiti
#abbastanza uniformemente tra il primo e il terzo quartile, con un intervallo
#interquartile (IQR) relativamente stretto, che mostra che non ci sono grandi 
#variazioni nei valori medi dell'MNDWI tra i mesi.
#Media e Mediana: La media (-0.06737) è leggermente maggiore della mediana (-0.07764), 
#suggerendo una leggera asimmetria verso i valori più alti (meno negativi). Tuttavia, 
#la differenza tra media e mediana non è grande, indicando una distribuzione abbastanza 
#simmetrica.


# Visualizzazione dei dati con un barplot
ggplot(data, aes(x = Mese, y = MNDWI, fill = Mese)) +
  geom_bar(stat = "identity") +
  theme_minimal() +
  labs(title = "MNDWI per Mese", x = "Mese", y = "MNDWI")



####################################àà Impostazione di una soglia per classificare l'acqua
soglia_acqua <- -0.1

# Classifica delle aree di acqua
acqua_l <- mndwi_l < soglia_acqua
acqua_mg <- mndwi_mg < soglia_acqua
acqua_mr <- mndwi_mr < soglia_acqua
acqua_g <- mndwi_g < soglia_acqua

# Funzione per calcolare l'area dell'acqua
calcola_area_acqua <- function(raster_acqua) {
  # Cont  delle celle che soddisfano la condizione
  num_celle_acqua <- cellStats(raster_acqua, stat = 'sum')
  # Risoluzione in metri delle celle
  risoluzione <- res(raster_acqua)
  # Calcolo dell'area (numero di celle * risoluzione in m²)
  area_acqua <- num_celle_acqua * prod(risoluzione)
  return(area_acqua)
}

# Calcol delle aree per ogni mese
area_acqua_l <- calcola_area_acqua(acqua_l)
area_acqua_mg <- calcola_area_acqua(acqua_mg)
area_acqua_mr <- calcola_area_acqua(acqua_mr)
area_acqua_g <- calcola_area_acqua(acqua_g)

# Stampa delle aree calcolate
cat("Area dell'acqua Luglio 2024:", area_acqua_l, "m²\n")
cat("Area dell'acqua Maggio 2024:", area_acqua_mg, "m²\n")
cat("Area dell'acqua Marzo 2024:", area_acqua_mr, "m²\n")
cat("Area dell'acqua Gennaio 2024:", area_acqua_g, "m²\n")

# Creazione di un data frame con i risultati
date <- as.Date(c("2024-01-01", "2024-03-01", "2024-05-01", "2024-07-01"))
aree_acqua <- c(area_acqua_g, area_acqua_mr, area_acqua_mg, area_acqua_l)
df <- data.frame(date = date, area_acqua = aree_acqua)

df 

#dal dataset si evince, che il mese con l'area più grande
#è marzo 2024 con 6,684,952,000 m². Questo indica che il 
#lago d'Aral ha avuto la sua massima estensione di acqua
#in marzo.

# Creazione del grafico
ggplot(df, aes(x = date, y = area_acqua)) +
  geom_line(color = "blue") +
  geom_point(color = "red") +
  labs(title = "Area dell'Acqua del Lago d'Aral nel 2024",
       x = "Data",
       y = "Area dell'Acqua (m²)") +
  theme_minimal() +
  scale_x_date(date_labels = "%b %Y", date_breaks = "1 month")

#########################AWEI#############
# Caricamento delle bande necessarie per il calcolo dell'AWEI

# Caricamento delle altre bande

swir11_l <- raster("T40TFR_20240709T065621_B11_20m.jp2") # Banda SWIR1 Luglio
swir11_mg <- raster("T40TFR_20240530T065621_B11_20m.jp2") # Banda SWIR1 Maggio
swir11_mr <- raster("T40TFR_20240301T065821_B11_20m.jp2") # Banda SWIR1 Marzo
swir11_g <- raster("T40TFR_20240101T070301_B11_20m.jp2")  # Banda SWIR1 Gennaio

swir12_l <- raster("T40TFR_20240709T065621_B12_20m.jp2")  # Banda SWIR2 Luglio
swir12_mg <- raster("T40TFR_20240530T065621_B12_20m.jp2") # Banda SWIR2 Maggio
swir12_mr <- raster("T40TFR_20240301T065821_B12_20m.jp2") # Banda SWIR2 Marzo
swir12_g <- raster("T40TFR_20240101T070301_B12_20m.jp2")  # Banda SWIR2 Gennaio

# Funzione per calcolare AWEIsh
calc_aweish <- function(green, nir, swir1, swir2) {
  return(4 * (green - swir1) - (0.25 * nir + 2.75 * swir2))
}

# Calcolo dell'AWEIsh per ciascun periodo
aweish_g <- calc_aweish(g3_g, nir8a_g, swir11_g, swir12_g)    # AWEIsh Gennaio 2024
aweish_mr <- calc_aweish(g3_mr, nir8a_mr, swir11_mr, swir12_mr)  # AWEIsh Marzo 2024
aweish_mg <- calc_aweish(g3_mg, nir8a_mg, swir11_mg, swir12_mg)  # AWEIsh Maggio 2024
aweish_l <- calc_aweish(g3_l, nir8a_l, swir11_l, swir12_l)    # AWEIsh Luglio 2024


# Visualizzazione degli AWEIsh per ciascun mese
par(mfrow = c(2, 2))
plot(aweish_g, main = "AWEIsh Gennaio 2024", col = viridis(100))
plot(aweish_mr, main = "AWEIsh Marzo 2024", col = viridis(100))
plot(aweish_mg, main = "AWEIsh Maggio 2024", col = viridis(100))
plot(aweish_l, main = "AWEIsh Luglio 2024", col = viridis(100))

# Calcolo della media e della deviazione standard degli AWEIsh per ciascun mese
aweish_mean_g <- cellStats(aweish_g, stat = 'mean', na.rm = TRUE)
aweish_sd_g <- cellStats(aweish_g, stat = 'sd', na.rm = TRUE)

aweish_mean_mr <- cellStats(aweish_mr, stat = 'mean', na.rm = TRUE)
aweish_sd_mr <- cellStats(aweish_mr, stat = 'sd', na.rm = TRUE)

aweish_mean_mg <- cellStats(aweish_mg, stat = 'mean', na.rm = TRUE)
aweish_sd_mg <- cellStats(aweish_mg, stat = 'sd', na.rm = TRUE)

aweish_mean_l <- cellStats(aweish_l, stat = 'mean', na.rm = TRUE)
aweish_sd_l <- cellStats(aweish_l, stat = 'sd', na.rm = TRUE)

# Creazione di un data frame per la visualizzazione
aweish_stats <- data.frame(
  Mese = c("Gennaio", "Marzo", "Maggio", "Luglio"),
  Media = c(aweish_mean_g, aweish_mean_mr, aweish_mean_mg, aweish_mean_l),
  SD = c(aweish_sd_g, aweish_sd_mr, aweish_sd_mg, aweish_sd_l)
)

print(aweish_stats)

###########################  PCA   ###############################
# Creazione di stack delle bande per ogni mese
bands_stack_jan <- stack(b2_norm_g, g3_norm_g, r4_norm_g, nir_norm_g, swir11_g)
bands_stack_mar <- stack(b2_norm_mr, g3_norm_mr, r4_norm_mr, nir_norm_mr, swir11_mr)
bands_stack_may <- stack(b2_norm_mg, g3_norm_mg, r4_norm_mg, nir_norm_mg, swir11_mg)
bands_stack_jul <- stack(b2_norm_l, g3_norm_l, r4_norm_l, nir_norm_l, swir11_l)

# Funzione per applicare la PCA a uno stack raster
apply_pca <- function(raster_stack) {
  # Converti lo stack in una matrice
  raster_matrix <- as.matrix(raster_stack)
  
  # Applicazione della PCA
  pca_result <- prcomp(raster_matrix, center = TRUE, scale. = TRUE)
  
  # Ricostruzione del raster con la prima componente principale
  pca_raster <- raster(raster_stack[[1]])
  pca_raster[] <- pca_result$x[,1]  # Usa la prima componente principale
  
  return(pca_raster)
}

# Applicazione della PCA a tutti i mesi
pca_jan <- apply_pca(bands_stack_jan)
pca_mar <- apply_pca(bands_stack_mar)
pca_may <- apply_pca(bands_stack_may)
pca_jul <- apply_pca(bands_stack_jul)

# Funzione per applicare la PCA a uno stack raster
apply_pca <- function(raster_stack) {
  # Converti lo stack in una matrice
  raster_matrix <- as.matrix(raster_stack)
  
  # Applicazione della PCA
  pca_result <- prcomp(raster_matrix, center = TRUE, scale. = TRUE)
  
  # Ricostruzione del raster con la prima componente principale
  pca_raster <- raster(raster_stack[[1]])
  pca_raster[] <- pca_result$x[,1]  # Usa la prima componente principale
  
  return(pca_raster)
}

# Applicazione della PCA a tutti i mesi
pca_jan <- apply_pca(bands_stack_jan)
pca_mar <- apply_pca(bands_stack_mar)
pca_may <- apply_pca(bands_stack_may)
pca_jul <- apply_pca(bands_stack_jul)

# Verifica delle dimensioni dei risultati PCA
print(dim(pca_result$x))  # Dovrebbe mostrare il numero di righe e colonne

# Verifica della classe e le dimensioni del raster
print(class(pca_jan))
print(dim(pca_jan))


# Visualizzazione delle prime componenti principali per ogni mese
par(mfrow = c(2, 2))
plot(pca_jan, main = "PCA Gennaio 2024", col = viridis(100))
plot(pca_mar, main = "PCA Marzo 2024", col = viridis(100))
plot(pca_may, main = "PCA Maggio 2024", col = viridis(100))
plot(pca_jul, main = "PCA Luglio 2024", col = viridis(100))

